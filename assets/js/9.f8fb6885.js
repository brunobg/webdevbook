(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{359:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),e("p",[t._v("There are a few possibilities for authentication on the backend. Traditionally users send a unique username (which can be an email) and a password. This was checked in the server, which created a session and stored a cookie on the browser. With the development of the web much was changed, and it became relevant to authenticate on third-party services, which generated the OAuth protocol. Instead of using cookies it also became common to store tokens sent as part of the headers. The "),e("RouterLink",{attrs:{to:"/frontend/authentication.html"}},[t._v("frontend section")]),t._v(" goes into more detail.")],1),t._v(" "),e("p",[t._v("Concerning the backend, we need to have an ability to authenticate users when we somehow get their information. We'll discuss two methods here; a purely local login and an OAuth flow, which can be local or remote.")]),t._v(" "),e("p",[t._v("If you plan to let third parties use your services on behalf of your users, you need OAuth. If you want just a simple login, it might be easier to use a less involved authentication system.")]),t._v(" "),e("h2",{attrs:{id:"local-authentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#local-authentication"}},[t._v("#")]),t._v(" Local authentication")]),t._v(" "),e("p",[t._v("We'll use "),e("a",{attrs:{href:"https://laravel.com/docs/7.x/sanctum",target:"_blank",rel:"noopener noreferrer"}},[t._v("Laravel Sanctum"),e("OutboundLink")],1),t._v(" for local authentication. It is a simple implementation generate API tokens and SPA authentication.")]),t._v(" "),e("h3",{attrs:{id:"setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[t._v("#")]),t._v(" Setup")]),t._v(" "),e("p",[t._v("Setup in a nutshell:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("composer require laravel/sanctum\n")])])]),e("p",[t._v("Next, you should publish the Sanctum configuration and migration files using the vendor:publish Artisan command. The sanctum configuration file will be placed in your config directory:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('php artisan vendor:publish --provider="Laravel\\Sanctum\\SanctumServiceProvider"\n')])])]),e("p",[t._v("Finally, you should run your database migrations. Sanctum will create one database table in which to store API tokens:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("php artisan migrate\n")])])]),e("p",[t._v("To use Sanctum to authenticate in SPA's, we can use Sanctum's middlewarm adding it to your app/Http/Kernel.php file:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("Laravel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Sanctum"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Http"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Middleware"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("EnsureFrontendRequestsAreStateful")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'api'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    EnsureFrontendRequestsAreStateful"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'throttle:60,1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \\"),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("Illuminate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Routing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Middleware"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("SubstituteBindings")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("p",[t._v("TODO, finish, Routing,")]),t._v(" "),e("h2",{attrs:{id:"oauth"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oauth"}},[t._v("#")]),t._v(" OAuth")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("php artisan passport:install\n")])])]),e("p",[t._v("Remember to "),e("RouterLink",{attrs:{to:"/frontend/authentication.html"}},[t._v("add these values to your .env files on the frontend")]),t._v(".")],1),t._v(" "),e("p",[t._v("TODO, finish, Routing,")])])}),[],!1,null,null,null);a.default=n.exports}}]);