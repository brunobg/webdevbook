(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{376:function(e,t,a){"use strict";a.r(t);var r=a(43),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deployment"}},[e._v("#")]),e._v(" Deployment")]),e._v(" "),a("p",[e._v("Deployment should be a one-step process at the most if you are not using CD, and zero-step if you are. We have three targets to our application; building all of them manually and deploying on your server and app stores is time consuming to do manually and error-prone.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("Write a script for building and another for deploying your application, which can be easily called by a CD tool.")])]),e._v(" "),a("p",[e._v("Ideally the building and deployment will be handled by your CI/CD tool.")]),e._v(" "),a("h2",{attrs:{id:"setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),a("p",[e._v("Uglifying makes your code more difficult to alter, smaller and sometimes even faster. The "),a("a",{attrs:{href:"https://github.com/webpack-contrib/terser-webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("terser plugin"),a("OutboundLink")],1),e._v(" is already part of the build system.")]),e._v(" "),a("p",[e._v("There are a number of things to configure before your first build for native environments, such as the "),a("a",{attrs:{href:"https://docs.nativescript.org/tooling/publishing/publishing-android-apps",target:"_blank",rel:"noopener noreferrer"}},[e._v("app name, launch screen and icons"),a("OutboundLink")],1),e._v(". Nativescript provides documentation to do all of this.")]),e._v(" "),a("h2",{attrs:{id:"building"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#building"}},[e._v("#")]),e._v(" Building")]),e._v(" "),a("h3",{attrs:{id:"web-build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-build"}},[e._v("#")]),e._v(" Web build")]),e._v(" "),a("p",[e._v("We need to build the application. Remember to set your "),a("code",[e._v(".env.local")]),e._v(" and "),a("code",[e._v(".env.production.*")]),e._v(" files with the correct data for your production environment.")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" version --patch  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# you can use this command to bump version")]),e._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" build:web "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# build it")]),e._v("\n")])])]),a("p",[e._v("The result will be in the "),a("code",[e._v("dist")]),e._v(" dir. Deployment varies wildly according to your hosting and server, but you essentially need to copy the "),a("code",[e._v("dist")]),e._v(" dir to the public directory of your webserver. There's "),a("a",{attrs:{href:"https://cli.vuejs.org/guide/deployment.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("a guide at the vue-cli docs"),a("OutboundLink")],1),e._v(" about deployment in several platforms.")]),e._v(" "),a("h3",{attrs:{id:"remote-native-builds-with-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remote-native-builds-with-ci"}},[e._v("#")]),e._v(" Remote native builds with CI")]),e._v(" "),a("p",[e._v("There is a [https://github.com/NativeScript/nativescript-remote-builds](plugin for remote builds) that is compatible with "),a("a",{attrs:{href:"CircleCI"}},[e._v("https://circleci.com")]),e._v(" and enables cloud building.")]),e._v(" "),a("p",[e._v("TODO")]),e._v(" "),a("p",[e._v("https://github.com/NativeScript/nativescript-remote-builds/blob/master/docs/CIRCLECI.md")]),e._v(" "),a("h3",{attrs:{id:"local-native-android-build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-native-android-build"}},[e._v("#")]),e._v(" Local native Android build")]),e._v(" "),a("p",[e._v("If you prefer to generate the Android release locally or on your build server, you also can. To generate the APK:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" run build:android\n")])])]),a("p",[e._v("There is extensive documentation on "),a("a",{attrs:{href:"https://docs.nativescript.org/tooling/publishing/publishing-android-apps",target:"_blank",rel:"noopener noreferrer"}},[e._v("how to publish your Android app with NativeScript"),a("OutboundLink")],1),e._v(". The command above will build the APK, but to distribute the app you'll also have to sign it:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("tns build android --release --key-store-path "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("path-to-your-keystore"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --key-store-password "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-key-store-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --key-store-alias "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-alias-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" --key-store-alias-password "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-alias-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),a("p",[e._v("Google Play Store has an "),a("a",{attrs:{href:"https://developers.google.com/android-publisher/tracks",target:"_blank",rel:"noopener noreferrer"}},[e._v("API to upload and release APKs"),a("OutboundLink")],1),e._v(", which allows you to deploy new versions from your deploy script, without human intervertion. "),a("a",{attrs:{href:"https://developers.google.com/android-publisher/libraries",target:"_blank",rel:"noopener noreferrer"}},[e._v("Check the libraries and sample code"),a("OutboundLink")],1),e._v(" to get started.")]),e._v(" "),a("h3",{attrs:{id:"local-ios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-ios"}},[e._v("#")]),e._v(" Local iOS")]),e._v(" "),a("p",[e._v("Remember that you can only build for iOS on an Apple computer.")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" run build:ios\n")])])]),a("p",[e._v("TODO https://docs.nativescript.org/tooling/publishing/publishing-ios-apps")]),e._v(" "),a("h2",{attrs:{id:"opengraph-tags-and-spa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#opengraph-tags-and-spa"}},[e._v("#")]),e._v(" OpenGraph tags and SPA")]),e._v(" "),a("p",[e._v("Our SPA client is completely standalone, and does not require a dynamic server. It can be served from any static HTTP server.")]),e._v(" "),a("p",[e._v("One disadvantage of this is that your meta tags on "),a("code",[e._v("<head>")]),e._v(" are not dynamic either. This means that previews of your page from OpenGraph or similar tags are static -- most clients parse OpenGraph tags from the HTML, without running Javascript. There are a couple ways to handle this.")]),e._v(" "),a("p",[e._v("One is to use the "),a("a",{attrs:{href:"https://github.com/chrisvfritz/prerender-spa-plugin",target:"_blank",rel:"noopener noreferrer"}},[e._v("prerender SPA plugin"),a("OutboundLink")],1),e._v(". This works well if you have a static content, but does not scale to hundres of routes or dynamic content.")]),e._v(" "),a("p",[e._v("For completely dynamic content, SSR is required. There's a "),a("a",{attrs:{href:"https://ssr.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("SSR guide from Vue"),a("OutboundLink")],1),e._v(". This is a backend problem, so we'll talk about it "),a("RouterLink",{attrs:{to:"/backend/deployment.html"}},[e._v("on the backend")]),e._v(".")],1)])}),[],!1,null,null,null);t.default=s.exports}}]);